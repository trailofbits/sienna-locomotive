#ifndef XploitabilityBangExploitable_H
#define XploitabilityBangExploitable_H

#include "Xploitability.h"

namespace sl2 {
class XploitabilityBangExploitable : public Xploitability {
public:
    
    XploitabilityBangExploitable( Minidump* dmp, ProcessState* state );

    virtual XploitabilityRank                  rank();
    
    virtual ExploitabilityRating    CheckPlatformExploitability();

private:
    bool                            isFaultingInstructionOnStack();
    bool                            testerFalse();
    bool                            testerTrue();



};


typedef struct BangExploitableResult
{
    // PROCESSING_TYPE		eProcessingType;
    // GATHER_FUNC			pfuncGatherFunction;
    // REPORT_PROC			pfuncReportProcedure;

    // DWORD				dwProcessorModeRule;
    // DWORD				dwExceptionAddressRangeRule;
    // DWORD				dwExceptionTypeRule;
    // DWORD64				qwExceptionSubTypeRule;
    // DWORD				dwExceptionLevelRule;

    // ANALYSIS_FUNC		pfuncAnalysisFunction;

    // CLASSIFICATION		eResult;
    // PCWSTR				pwzDescription;
    // PCWSTR				pwzShortDescription;
    // PCWSTR				pwzExplanation;
    // PCWSTR				pwzUrl;
	bool				isFinal;
} BangExploitableResult;


} // namespace

#endif