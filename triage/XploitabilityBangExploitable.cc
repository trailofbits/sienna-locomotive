#include "Xploitability.h"
#include "XploitabilityBangExploitable.h"

#include <cstdlib>

using namespace std;

namespace sl2 {

XploitabilityBangExploitable::XploitabilityBangExploitable(Minidump *dump,
                                     ProcessState *process_state)
    : Xploitability(dump, process_state) { 
      CheckPlatformExploitability();
    }



double XploitabilityBangExploitable::exploitabilityScore() {
    return 0;
}


bool XploitabilityBangExploitable::isFaultingInstructionOnStack() {
    uint64_t addy = process_state_->crash_address();
    if( addy==0 ) { 
        return false;
    }

    MinidumpException* exception = dump_->GetException();
    if( !exception ) {
        return false;
    }

    MinidumpContext* ctx = exception->GetContext();
    if( !ctx ) {
        return false;
    }

    uint64_t stackPtr;
    ctx->GetStackPointer(&stackPtr);

    uint64_t delta = abs( (int64_t)(addy - stackPtr) );

    if( delta<40960 ) {
        return true;
    }
    return false;
}

ExploitabilityRating XploitabilityBangExploitable::CheckPlatformExploitability() {
    cout << "!xploitable: " << isFaultingInstructionOnStack() << endl;
    return EXPLOITABILITY_NOT_ANALYZED;
}

}